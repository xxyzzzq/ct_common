#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.50])
AC_INIT([ct_common], m4_esyscmd([tr -d '\n' < VERSION]), [zhangzq@ios.ac.cn])
AC_CONFIG_SRCDIR([src/ct_common/common/exp.h])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_MACRO_DIR([m4])
m4_ifndef([AM_SILENT_RULES], [m4_define([AM_SILENT_RULES],[])])
AM_SILENT_RULES

AM_INIT_AUTOMAKE([1.9 tar-pax])

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC


AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_LANG_PUSH([C++])
AC_CHECK_HEADERS([boost/shared_ptr.hpp],[CXXFLAGS+=" -D USE_BOOST_SHARED_PTR"],[])
AC_LANG_POP([C++])

AC_ARG_ENABLE([debug],
AS_HELP_STRING([--enable-debug],
               [enable debugging, default: no]),
[case "${enableval}" in
yes) debug=true ;;
no) debug=false ;;
*) AC_MSG_ERROR([bad value ${enableval} for --enable-debug]) ;;
esac],[debug=false])
AM_CONDITIONAL([DEBUG], [test x$debug = xtrue])

if test x$debug = xtrue; then
CXXFLAGS+=" -g3 -D_DEBUG=1"
else
CXXFLAGS+=" -g -O2"
fi

CXXFALGS+=" -DQUEX_OPTION_ASSERTS_WARNING_MESSAGE_DISABLED -DQUEX_OPTION_ASSERTS_DISABLED"

AC_CHECK_PROGS([QUEX], [quex], [])
AC_CHECK_PROGS([BISON], [bison], [])

AM_CONDITIONAL([QUEX_ENABLED], [test -n "$QUEX"])
AM_CONDITIONAL([BISON_ENABLED], [test -n "$BISON"])

AC_CHECK_PROGS([PDFLATEX], [pdflatex], [])
if test "$PDFLATEX" != "pdflatex"; then
echo "documentation will not be built since pdflatex is not installed"
fi

AM_CONDITIONAL([BUILD_MANUAL], [test "$PDFLATEX" = "pdflatex"])

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([stdlib.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_INLINE

# Checks for library functions.

AC_CONFIG_FILES([Makefile
                 src/Makefile
                 src/ct_common/Makefile
                 src/ct_common/common/Makefile
                 src/ct_common/file_parse/Makefile
                 src/ct_common/example/Makefile
								 doc/Makefile])
AC_OUTPUT

